'use client'
// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Auth from "./Auth.res.js";
import * as Icons from "./Icons.res.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";

function Pages_ReadArticle_Buttons$Button(props) {
  var __onClick = props.onClick;
  var __className = props.className;
  var className = __className !== undefined ? __className : "";
  var onClick = __onClick !== undefined ? __onClick : (function (param) {
        
      });
  return JsxRuntime.jsx("button", {
              children: props.children,
              className: "f " + className,
              onClick: onClick
            });
}

var Button = {
  make: Pages_ReadArticle_Buttons$Button
};

function useLikes(initial) {
  var match = React.useState(function () {
        return initial;
      });
  var setLikes = match[1];
  var likes = match[0];
  var auth = Auth.useSync();
  var myLike;
  if (typeof auth !== "object") {
    myLike = false;
  } else {
    var user = auth._0;
    myLike = likes.some(function (like) {
          return like.name === user.profile.name;
        });
  }
  var toggleLike = function () {
    if (typeof auth !== "object") {
      return ;
    }
    var user = auth._0;
    if (myLike) {
      return setLikes(function (likes) {
                  return likes.filter(function (like) {
                              return like.name !== user.profile.name;
                            });
                });
    } else {
      return setLikes(function (likes) {
                  return Belt_Array.concatMany([
                              likes,
                              [{
                                  name: user.profile.name
                                }]
                            ]);
                });
    }
  };
  return [
          likes,
          myLike,
          toggleLike
        ];
}

function Pages_ReadArticle_Buttons(props) {
  var match = useLikes(props.likes);
  var toggleLike = match[2];
  var likes = match[0];
  return JsxRuntime.jsxs("section", {
              children: [
                likes.length > 0 ? JsxRuntime.jsx("p", {
                        children: likes.map(function (like) {
                                return like.name;
                              }).join(", ") + "님이 이 일지에 공감합니다",
                        className: "text-sm text-neutral-500"
                      }) : null,
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsxs(Pages_ReadArticle_Buttons$Button, {
                              children: [
                                JsxRuntime.jsx(Icons.$$Comment.make, {}),
                                props.commentsCount.toString()
                              ]
                            }),
                        JsxRuntime.jsxs(Pages_ReadArticle_Buttons$Button, {
                              className: "text-red-500",
                              children: [
                                JsxRuntime.jsx(Icons.Favorite.make, {
                                      className: match[1] ? "" : "outlined"
                                    }),
                                likes.length.toString()
                              ],
                              onClick: (function (param) {
                                  toggleLike();
                                })
                            })
                      ],
                      className: "flex"
                    })
              ]
            });
}

var make = Pages_ReadArticle_Buttons;

export {
  Button ,
  useLikes ,
  make ,
}
/* Auth Not a pure module */
