'use client';
// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Actions from "./Actions.res.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as GlobalState from "./GlobalState.res.js";
import * as Core__Option from "@rescript/core/src/Core__Option.res.js";

function initial() {
  return "Loading";
}

var include = GlobalState.Make({
      initial: initial
    });

var update = include.update;

var addHook = include.addHook;

var timeout = {
  contents: undefined
};

addHook(function (state) {
      Core__Option.map(timeout.contents, (function (prim) {
              clearTimeout(prim);
            }));
      if (typeof state !== "object") {
        return ;
      } else {
        timeout.contents = Caml_option.some(setTimeout((function () {
                    if (typeof state !== "object") {
                      return ;
                    }
                    Actions.refresh().then(function (res) {
                          var newState = res !== undefined ? ({
                                TAG: "LoggedIn",
                                _0: res
                              }) : "Anon";
                          update(newState);
                        });
                  }), 3000000));
        return ;
      }
    });

var initTokenCalled = {
  contents: false
};

async function initToken() {
  if (initTokenCalled.contents) {
    return ;
  }
  initTokenCalled.contents = true;
  var pathname = window.location.pathname;
  if (pathname === "/login/naver/callback") {
    return update("Anon");
  }
  var res = await Actions.refresh();
  var newState = res !== undefined ? ({
        TAG: "LoggedIn",
        _0: res
      }) : "Anon";
  return update(newState);
}

var useSync = include.useSync;

export {
  useSync ,
  update ,
  addHook ,
  timeout ,
  initTokenCalled ,
  initToken ,
}
/* include Not a pure module */
