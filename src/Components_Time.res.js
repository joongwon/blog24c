'use client';
// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Now from "./Now.res.js";
import * as React from "react";
import ReactTimeago from "react-timeago";
import * as JsxRuntime from "react/jsx-runtime";

function formatter(value, unit, suffix, param, param$1) {
  if (value !== 1) {
    if (value === 2 && unit === "day") {
      if (suffix === "from now") {
        return "모레";
      } else {
        return "그저께";
      }
    }
    
  } else {
    if (unit === "week") {
      if (suffix === "from now") {
        return "다음주";
      } else {
        return "지난주";
      }
    }
    if (unit === "year") {
      if (suffix === "from now") {
        return "내년";
      } else {
        return "작년";
      }
    }
    if (unit === "day") {
      if (suffix === "from now") {
        return "내일";
      } else {
        return "어제";
      }
    }
    if (unit === "month") {
      if (suffix === "from now") {
        return "다음달";
      } else {
        return "지난달";
      }
    }
    
  }
  if (unit === "second") {
    if (suffix === "from now") {
      return "잠시후";
    } else {
      return "방금전";
    }
  }
  var value$1 = value.toString();
  var unit$1 = unit === "week" ? "주" : (
      unit === "year" ? "년" : (
          unit === "minute" ? "분" : (
              unit === "second" ? "초" : (
                  unit === "day" ? "일" : (
                      unit === "month" ? "달" : "시간"
                    )
                )
            )
        )
    );
  var suffix$1 = suffix === "from now" ? "후" : "전";
  return value$1 + unit$1 + " " + suffix$1;
}

function formatDate(date) {
  var date$1 = new Date(date);
  var year = date$1.getFullYear().toString();
  var month = (date$1.getMonth() + 1 | 0).toString();
  var day = date$1.getDate().toString();
  return year + "년 " + month + "월 " + day + "일";
}

function formatTitle(date) {
  var padZero = function (value) {
    if (value < 10) {
      return "0" + value.toString();
    } else {
      return value.toString();
    }
  };
  var date$1 = new Date(date);
  var year = date$1.getFullYear().toString();
  var month = padZero(date$1.getMonth() + 1 | 0);
  var day = padZero(date$1.getDate());
  var hour = padZero(date$1.getHours());
  var minute = padZero(date$1.getMinutes());
  var second = padZero(date$1.getSeconds());
  return year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;
}

function Components_Time(props) {
  var className = props.className;
  var children = props.children;
  var now = Now.useNow();
  var date = React.useMemo((function () {
          return new Date(children);
        }), [children]);
  var title = React.useMemo((function () {
          return formatTitle(children);
        }), [children]);
  if (now - date.getTime() < 604800000) {
    return JsxRuntime.jsx(ReactTimeago, {
                date: date,
                formatter: formatter,
                title: title,
                now: now,
                suppressHydrationWarning: true,
                className: className
              });
  } else {
    return JsxRuntime.jsx("time", {
                children: formatDate(children),
                className: className,
                title: title,
                dateTime: date.toISOString()
              });
  }
}

var make = Components_Time;

export {
  formatter ,
  formatDate ,
  formatTitle ,
  make ,
}
/* Now Not a pure module */
