// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as RescriptCore from "@rescript/core/src/RescriptCore.res.mjs";
import * as PgtypedRescriptRuntime from "pgtyped-rescript-runtime";

var query1IR = {"usedParamSet":{"id":true},"params":[{"name":"id","required":true,"transform":{"type":"scalar"},"locs":[{"a":44,"b":47}]}],"statement":"SELECT id, name, role FROM users WHERE id = :id!"};

var query = new PgtypedRescriptRuntime.PreparedQuery(query1IR);

function many(client, params) {
  return query.run(params, client);
}

async function one(client, params) {
  var match = await query.run(params, client);
  if (match.length !== 1) {
    return ;
  } else {
    return match[0];
  }
}

async function expectOne(client, params, errorMessage) {
  var match = await query.run(params, client);
  if (match.length !== 1) {
    return RescriptCore.panic(Core__Option.getOr(errorMessage, "More or less than one item was returned"));
  } else {
    return match[0];
  }
}

async function execute(client, params) {
  await query.run(params, client);
}

var Query1 = {
  many: many,
  one: one,
  expectOne: expectOne,
  execute: execute
};

function query1(params, client) {
  return query.run(params, client);
}

export {
  Query1 ,
  query1 ,
}
/* query Not a pure module */
